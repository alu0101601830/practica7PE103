{"version":3,"file":"/home/usuario/practicas/practica7PE103/practica7PE103/src/ejercicio2PE103_p7/MetricLength.ts","sources":["/home/usuario/practicas/practica7PE103/practica7PE103/src/ejercicio2PE103_p7/MetricLength.ts"],"names":[],"mappings":";;;AAAA,yEAAmE;AACnE;;;GAGG;AACH,MAAa,YAAY;IACb,MAAM,CAAS,CAAC,aAAa;IACrC;;;OAGG;IACH,YAAY,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IACD;;;OAGG;IACH,eAAe,CAAC,KAAa;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IACD;;OAEG;IACH,eAAe;QACX,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,KAAa;QACpB,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,KAAK,CAAC;IAC9B,CAAC;IACD;;OAEG;IACH,UAAU;QACN,OAAO,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,KAAa;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;IACjC,CAAC;IACD;;OAEG;IACH,cAAc;QACV,OAAO,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAChC,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACZ,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;QACjC,IAAI,QAAQ,GAAG,IAAI,+BAAc,CAAC,QAAQ,CAAC,CAAA;QAC3C,OAAO,QAAQ,CAAC;IACpB,CAAC;IACD;;;;OAIG;IACH,oBAAoB,CAAC,QAAgB;QACjC,IAAI,WAAW,GAAG,QAAQ,GAAG,IAAI,CAAC;QAClC,OAAO,WAAW,CAAC;IACvB,CAAC;IACD;;;OAGG;IACH,YAAY,CAAC,KAAa;QACtB,IAAI,QAAQ,GAAG,IAAI,+BAAc,CAAC,KAAK,CAAC,CAAA;QACxC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;IACrE,CAAC;IACD;;OAEG;IACH,YAAY;QACR,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,YAAY,EAAE,CAAC;IAClD,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,KAAa;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC;IAChC,CAAC;IACD;;OAEG;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,QAAQ,EAAE,CAAC;IAC9C,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,KAAa;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC;IAChC,CAAC;IACD;;OAEG;IACH,UAAU;QACN,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,UAAU,EAAE,CAAC;IAChD,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,KAAa;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;IACjC,CAAC;IACD;;OAEG;IACH,UAAU;QACN,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,UAAU,EAAE,CAAC;IAChD,CAAC;CAEJ;AA9HD,oCA8HC","sourcesContent":["import {ImperialLength} from \"../ejercicio1PE103_p7/ImperialLength\"\n/**\n * Clase MetricLength para convertir números en el sistema Metric\n * @class\n */\nexport class MetricLength{\n    private _valor: number; //centimetros\n    /**\n     * Constructor de MetricLength\n     * @param valor Valor inicial en centimetros de la clase\n     */\n    constructor(valor: number){\n        this._valor = valor;\n    }\n    /**\n     * Setter que pone el nuevo valor en la clase en centimetros\n     * @param nuevo Número que queremos que sea el nuevo valor\n     */\n    set_centimetros(nuevo: number){\n        this._valor = nuevo;\n    }\n    /**\n     * Getter que devuelve el valor en centimetros\n     */\n    get_centimetros(): number{\n        return this._valor;\n    }\n\n    /**\n     * Setter que pone el nuevo valor que lo transforma de metros a centimetros\n     * @param nuevo Número que queremos que sea el nuevo valor\n     */\n    set_metros(nuevo: number){\n        this._valor = 100 * nuevo;\n    }\n    /**\n     * Getter que devuelve el valor de centimetros a metros\n     */\n    get_metros(): number{\n        return this._valor / 100;\n    }\n\n    /**\n     * Setter que pone el nuevo valor que lo transforma de kilometros a centimetros\n     * @param nuevo Número que queremos que sea el nuevo valor\n     */\n    set_kilometros(nuevo: number){\n        this._valor = 100000 * nuevo;\n    }\n    /**\n     * Getter que devuelve el valor de centimetros a kilometros\n     */\n    get_kilometros(): number{\n        return this._valor / 100000;\n    }\n\n    /**\n     * Método que crea una clase imperial con los datos de la clase metric\n     * @returns \n     */\n    metricToImperial(): ImperialLength{\n        let pulgadas = this._valor / 2.54\n        let imperial = new ImperialLength(pulgadas)\n        return imperial;\n    }\n    /**\n     * Método que pasa de pulgadas a centimetros\n     * @param pulgadas \n     * @returns Las pulgadas en centimetros\n     */\n    pulgadasACentimetros(pulgadas: number): number{\n        let centimetros = pulgadas * 2.54;\n        return centimetros;\n    }\n    /**\n     * Setter que pone el nuevo valor en la clase en pulgadas\n     * @param nuevo Número que queremos que sea el nuevo valor\n     */\n    set_pulgadas(nuevo: number){\n        let imperial = new ImperialLength(nuevo)\n        this._valor = this.pulgadasACentimetros(imperial.get_pulgadas());\n    }\n    /**\n     * Getter que devuelve el valor en pulgadas\n     */\n    get_pulgadas(): number{\n        return this.metricToImperial().get_pulgadas();\n    }\n\n    /**\n     * Setter que pone el nuevo valor que lo transforma de pies a centimetros\n     * @param nuevo Número que queremos que sea el nuevo valor\n     */\n    set_pies(nuevo: number){\n        this._valor = nuevo * 30.48;\n    }\n    /**\n     * Getter que devuelve el valor de centimetros a pies\n     */\n    get_pies(): number{\n        return this.metricToImperial().get_pies();\n    }\n\n    /**\n     * Setter que pone el nuevo valor que lo transforma de yardas a centimetros\n     * @param nuevo Número que queremos que sea el nuevo valor\n     */\n    set_yardas(nuevo: number){\n        this._valor = 91.44 * nuevo;\n    }\n    /**\n     * Getter que devuelve el valor de centimetros a yardas\n     */\n    get_yardas(): number{\n        return this.metricToImperial().get_yardas();\n    }\n\n    /**\n     * Setter que pone el nuevo valor que lo transforma de millas a centimetros\n     * @param nuevo Número que queremos que sea el nuevo valor\n     */\n    set_millas(nuevo: number){\n        this._valor = 160934 * nuevo;\n    }\n    /**\n     * Getter que devuelve el valor de centimetros a millas\n     */\n    get_millas(): number{\n        return this.metricToImperial().get_millas();\n    }\n\n}"]}